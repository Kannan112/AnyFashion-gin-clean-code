// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"github.com/kannan112/go-gin-clean-arch/pkg/api"
	"github.com/kannan112/go-gin-clean-arch/pkg/api/handler"
	"github.com/kannan112/go-gin-clean-arch/pkg/config"
	"github.com/kannan112/go-gin-clean-arch/pkg/db"
	"github.com/kannan112/go-gin-clean-arch/pkg/repository"
	"github.com/kannan112/go-gin-clean-arch/pkg/usecase"
)

// Injectors from wire.go:

func InitializeAPI(cfg config.Config) (*http.ServerHTTP, error) {
	gormDB, err := db.ConnectDatabase(cfg)
	if err != nil {
		return nil, err
	}
	userRepository := repository.NewUserRepository(gormDB)
	userUseCase := usecase.NewUserUseCase(userRepository)
	cartRepository := repository.NewCartRepository(gormDB)
	cartUseCases := usecase.NewCartUseCase(cartRepository)
	walletRepo := repository.NewWalletRepository(gormDB)
	walletUseCase := usecase.NewWalletUseCase(walletRepo)
	userHandler := handler.NewUserHandler(userUseCase, cartUseCases, walletUseCase)
	adminRepository := repository.NewAdminRepository(gormDB)
	adminUsecase := usecase.NewAdminUseCase(adminRepository)
	adminHandler := handler.NewAdminSHandler(adminUsecase)
	cartHandler := handler.NewCartHandler(cartUseCases)
	productRepository := repository.NewProductRepository(gormDB)
	productUseCase := usecase.NewProductUsecase(productRepository)
	productHandler := handler.NewProductHandler(productUseCase)
	orderRepository := repository.NewOrderRepository(gormDB)
	orderUseCase := usecase.NewOrderUseCase(orderRepository, cartRepository)
	orderHandler := handler.NewOrderHandler(orderUseCase, walletUseCase)
	paymentRepo := repository.NewPaymentRepo(gormDB)
	paymentUsecases := usecase.NewPaymentUsecase(paymentRepo)
	paymentHandler := handler.NewPaymentHandler(paymentUsecases)
	wishListRepo := repository.NewWishlistRepository(gormDB)
	wishlistUseCases := usecase.NewWishlistUsecase(wishListRepo)
	wishlistHandler := handler.NewWishlistHandler(wishlistUseCases)
	couponRepository := repository.NewCouponRepository(gormDB)
	couponUseCase := usecase.NewCouponUseCase(couponRepository)
	couponHandler := handler.NewCouponHandler(couponUseCase)
	walletHandler := handler.NewWalletHandler(walletUseCase)
	serverHTTP := http.NewServerHTTP(userHandler, adminHandler, cartHandler, productHandler, orderHandler, paymentHandler, wishlistHandler, couponHandler, walletHandler)
	return serverHTTP, nil
}
