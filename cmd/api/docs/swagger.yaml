definitions:
  req.Address:
    properties:
      city:
        type: string
      district:
        type: string
      house_number:
        type: string
      id:
        type: integer
      isdefault:
        type: boolean
      landmark:
        type: string
      pincode:
        type: integer
      street:
        type: string
    required:
    - city
    - district
    - house_number
    - landmark
    - pincode
    - street
    type: object
  req.Coupons:
    properties:
      code:
        type: string
      discountmaximumamount:
        type: number
      discountpercent:
        type: number
      expirationdate:
        type: string
      minimumpurchaseamount:
        type: number
    type: object
  req.LoginReq:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  req.OTPData:
    properties:
      phoneNumber:
        type: string
    type: object
  req.UserReq:
    properties:
      email:
        type: string
      mobile:
        type: string
      name:
        type: string
      password:
        type: string
    required:
    - email
    - mobile
    - name
    type: object
  req.VerifyOtp:
    properties:
      code:
        type: string
      user:
        $ref: '#/definitions/req.OTPData'
    required:
    - code
    - user
    type: object
  res.Response:
    properties:
      data: {}
      error: {}
      message:
        type: string
      stastuscode:
        type: integer
    type: object
info:
  contact: {}
paths:
  /admin/category/delete/{category_id}:
    delete:
      consumes:
      - application/json
      description: Admin can delete a category
      operationId: delete-category
      parameters:
      - description: category_id
        in: path
        name: category_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/res.Response'
      summary: Admin can delete a category
      tags:
      - Product Category
  /admin/coupon:
    get:
      consumes:
      - application/json
      description: admin view all coupon
      operationId: ViewCoupon
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/res.Response'
      summary: view coupons
      tags:
      - Coupon
  /admin/coupon/add:
    post:
      consumes:
      - application/json
      description: Admin can create new coupons
      operationId: create-coupon
      parameters:
      - description: details of new coupon to be created
        in: body
        name: new_coupon_details
        required: true
        schema:
          $ref: '#/definitions/req.Coupons'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/res.Response'
      summary: Admin can create new coupon
      tags:
      - Coupon
  /admin/coupon/delete/:couponId:
    delete:
      consumes:
      - application/json
      description: Delete coupon
      operationId: DeleteCoupon
      parameters:
      - description: New Admin details
        in: path
        name: couponId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/res.Response'
      summary: Delete a coupon
      tags:
      - Coupon
  /admin/coupon/update:
    patch:
      consumes:
      - application/json
      description: admin coupon update
      operationId: UpdateCoupon
      parameters:
      - description: New Admin details
        in: body
        name: admin
        required: true
        schema:
          $ref: '#/definitions/req.Coupons'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/res.Response'
      summary: Update a existing coupon
      tags:
      - Coupon
  /admin/login:
    post:
      consumes:
      - application/json
      description: Logs in an admin user and returns an authentication token
      parameters:
      - description: Admin login details
        in: body
        name: admin
        required: true
        schema:
          $ref: '#/definitions/req.LoginReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/res.Response'
      summary: Admin Login
      tags:
      - Admin
  /user/address/add:
    post:
      consumes:
      - application/json
      description: Login as a user to access the ecommerce site
      operationId: AddAddress
      parameters:
      - description: Input Field
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/req.Address'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/res.Response'
      summary: Add Address
      tags:
      - Address
  /user/address/listall:
    get:
      consumes:
      - application/json
      description: Login as a user to access the ecommerce site
      operationId: ListallAddres
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/res.Response'
      summary: List Address
      tags:
      - Address
  /user/address/update:
    patch:
      consumes:
      - application/json
      description: Login as a user to access the ecommerce site
      operationId: UpdateAddress
      parameters:
      - description: Input Field
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/req.Address'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/res.Response'
      summary: Update Address
      tags:
      - Address
  /user/login:
    post:
      consumes:
      - application/json
      description: Login as a user to access the ecommerce site
      operationId: UserLogin
      parameters:
      - description: Input Field
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/req.LoginReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/res.Response'
      summary: User Login
      tags:
      - Users
  /user/logout:
    get:
      consumes:
      - application/json
      description: User logout to access the ecommerce site
      operationId: UserLogout
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/res.Response'
      summary: User Logout
      tags:
      - Users
  /user/otp/send:
    post:
      consumes:
      - application/json
      description: Send OTP to use's mobile
      operationId: send-otp
      parameters:
      - description: User mobile number
        in: body
        name: user_mobile
        required: true
        schema:
          $ref: '#/definitions/req.OTPData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/res.Response'
      summary: Send OTP to user's mobile
      tags:
      - Otp
  /user/otp/verify:
    post:
      consumes:
      - application/json
      description: Validate the  OTP sent to use's mobile
      operationId: validate-otp
      parameters:
      - description: OTP sent to user's mobile number
        in: body
        name: otp
        required: true
        schema:
          $ref: '#/definitions/req.VerifyOtp'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/res.Response'
      summary: Validate the OTP to user's mobile
      tags:
      - Otp
  /user/profile/edit:
    patch:
      consumes:
      - application/json
      description: Edit user prodile ecommerce site
      operationId: EditProfile
      parameters:
      - description: Input Field
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/req.UserReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/res.Response'
      summary: Edit Profile
      tags:
      - Profile
  /user/profile/view:
    get:
      consumes:
      - application/json
      description: Login as a user to access the ecommerce site
      operationId: ViewProfile
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/res.Response'
      summary: View Profile
      tags:
      - Profile
  /user/wishlist/add/:itemId:
    post:
      consumes:
      - application/json
      description: Login as a user to access the ecommerce site
      operationId: AddToWishlist
      parameters:
      - description: itemId
        in: path
        name: itemId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/res.Response'
      summary: Add Wishlist
      tags:
      - Wishlist
swagger: "2.0"
